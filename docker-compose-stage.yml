#version: "3.9"
services:

  # Django Project:
  todoapp:
    container_name: todoapp
    build: .
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn core.wsgi:application --bind 0.0.0.0:8000" 
    volumes:
      - ./core:/app
      - static-volume:/app/static
      - media-volume:/app/media
    # ports:
    #   - "8000:8000"
    expose:    # for access from nginx container only
      - "8000"
    restart: always
    environment:
      - SECRET_KEY=test
      - DEBUG=True
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_HOST=db
      - DB_PORT=5432
    depends_on: 
      - redis
      - db

  # Locust:
  master:
    image: locustio/locust
    ports:
     - "8089:8089"
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master -H http://todoapp:8089
  
  worker:
    image: locustio/locust
    volumes:
      - ./core/locust:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master
  
  # Redis:
  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    restart: always

  # Celery Worker:
  celery-worker:
    build: .
    container_name: celery-worker
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
    environment:
      - DEBUG=False
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
      - redis
  
  # Celery Beat:
  celery-beat:
    build: .
    container_name: celery-beat
    command: celery -A core beat --loglevel=info
    volumes:
      - ./core:/app
    environment:
      - DEBUG=False
      - DB_NAME=mydatabase
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
      - redis

  # nginx:
  nginx:
    image: nginx
    container_name: nginx
    ports: 
      - "80:80"
    restart: always
    volumes:
      - ./core/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static-volume:/app/static
      - media-volume:/app/media
    depends_on:
      - redis
      - todoapp

  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports: 
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  postgres_data:
  static-volume:
  media-volume:
